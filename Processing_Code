import processing.video.*;
import processing.serial.*;

Capture video;
Serial myPort;

void setup() {
  size(640, 480);
  // Uses the default video input, see the reference if this causes an error
  video = new Capture(this, width, height);
  video.start();  
  noStroke();
  smooth();
  
  String portName = Serial.list()[3]; //change the 0 to a 1 or 2 etc. to match your port
  myPort = new Serial(this, portName, 9600);
}

void draw() {
  if (video.available()) {
    video.read();
    image(video, 0, 0, width, height); // Draw the webcam video onto the screen
    int blackestX = 0; // X-coordinate of the brightest video pixel
    int blackestY = 0; // Y-coordinate of the brightest video pixel
    float blackestValue = 0; // Brightness of the brightest video pixel
    // Search for the brightest pixel: For each row of pixels in the video image and
    // for each pixel in the yth row, compute each pixel's index in the video
    video.loadPixels();
    int index = 0;
    for (int y = 0; y < video.height; y++) {
      for (int x = 0; x < video.width; x++) {
        // Get the color stored in the pixel
        int pixelColor = video.pixels[index];

        int r = (pixelColor >> 16) & 0xff;
        int g = (pixelColor >> 8) & 0xff;
        int b = pixelColor & 0xff;
        
        int blackness = b-r-g;
        
        //System.out.println(blackness);
        
        if(blackness > blackestValue){
          blackestValue = blackness;
          blackestX = x;
          blackestY = y;
        }
        
        index++;
      }
    }
    // Draw a large, yellow circle at the brightest pixel
    //fill(255, 204, 0, 128);
    ellipse(blackestX, blackestY, 100, 100);
    
    int xDegree = (int)(((double)blackestX/640)*180);
    int yDegree = (int)(((double)blackestY/480)*180);
    
    System.out.println(xDegree);
    
    byte out[] = new byte[2];
    out[0] = byte(xDegree);
    out[1] = byte(yDegree);
    myPort.write(out);
    delay(100);
  }
}
